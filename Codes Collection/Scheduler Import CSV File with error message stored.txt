//Scheduler Import CSV File with error message stored.

function importCSVFile($import){
  $data     = array_merge($this->global_data);
  $filename = $import->CSVFileUrl;
  $handle   = fopen($filename,"r");

  $data['IpAddress']       = $this->input->ip_address();
  $data['OperatingSystem'] = $this->agent->platform();
  $data['Browser']         = $this->agent->browser();

  $data['UserId']      = $this->session->userdata('UserId');

  $actmsg = '';
  $csvfile = true;
  $errorImport = array();

  if ($handle) {
    $row_num = 0;
    while (($row = fgetcsv($handle,1000,","))!== FALSE) {
      $row_num++;
      if ($row_num > 2) {
        if (count($row) >= 8) {
          $searchFor = $row[2];
          $gvNumber = array_values(array_filter($this->gift_Model->getGiftVoucherNumber(), function($element) use($searchFor){
            return isset($element->VouchersNumber) && $element->VouchersNumber == $searchFor;
          }));

          $searchFor = $row[0];
          $storecode = array_values(array_filter($this->gift_Model->getStoreId(), function($element) use($searchFor){
            return isset($element->StoreCode) && $element->StoreCode == $searchFor;
          }));

          $searchFor = $row[6];
          $redeemStore = array_values(array_filter($this->gift_Model->getStoreId(), function($element) use($searchFor){
            return isset($element->StoreCode) && $element->StoreCode == $searchFor;
          }));

          $issuedate  = implode("-", array_reverse(explode("/", $row[1])));
          $expirydate = implode("-", array_reverse(explode("/", $row[4])));

            if (!empty($storecode))
            {
              if ($storecode[0]->StoreStatusId == 1)
              {
                if (!empty($gvNumber))
                {
                  if ($row[7] == null) {
                    $errorImport[] = array(
                      'VoucherNumber' => $row[2],
                      'ErrorMessage' => 'Voucher already exist. Please key in Action to update this voucher'
                    );
                    $csvfile = false;
                    $actmsg  = " is trying to Import Existing Gift Voucher. Failed.";
                  }
                  else
                  {
                      if ($gvNumber[0]->VoucherStatusId == 1 || $gvNumber[0]->VoucherStatusId == 3 || $gvNumber[0]->VoucherStatusId == 10)
                      {
                        if ($row[7] == 'CANCEL')
                        {
                          $voucheractivity = [
                            'GiftVouchersId' => $gvNumber[0]->GiftVouchersId,
                            'CancelDate' => date('Y-m-d H:i:s'),
                            'CancelReasons' => 3
                          ];
                          $giftstatus = 5;

                        }
                        elseif ($row[7] == 'BLOCK')
                        {
                          $voucheractivity = [
                            'GiftVouchersId' => $gvNumber[0]->GiftVouchersId,
                            'BlockDate' => date('Y-m-d H:i:s'),
                            'BlockReasons' => 3
                          ];
                          $giftstatus = 6;
                        }
                        $voucherdetails = [
                          'GiftVouchersId'  => $gvNumber[0]->GiftVouchersId,
                          'VoucherStatusId' => $giftstatus
                        ];
                        $this->gift_Model->updateGift($voucherdetails);
                        $this->gift_Model->insertGiftHistory($voucheractivity);
                      }
                      else
                      {
                        $errorImport[] = array(
                          'VoucherNumber' => $row[2],
                          'ErrorMessage' => 'Not allowed to override ACTION on this voucher.'
                        );
                        $csvfile = false;
                        $actmsg  = " is trying to Import Existing Gift Voucher. Failed.";
                      }
                  }
                }elseif ($row[5] == null) {
                  $errorImport[] = array(
                    'VoucherNumber' => $row[2],
                    'ErrorMessage' => 'Batch Number cannot be Empty!'
                  );
                  $csvfile = false;
                  $actmsg  = " is trying to Import Gift Voucher without Batch Number. Failed.";
                }else {
                  if ($row[3] != 0 || $row[3] != "0" || $row[3] != "0.0")
                  {
                    if (isset($redeemStore[0])) {
                      $redeemStore = $redeemStore[0]->StoreCode;
                    }else {
                      $redeemStore = '';
                    }

                    if ($row[4] != null) {
                      $memData[] = array(
                          'StoreId'            => $storecode[0]->StoreId,
                          'IssuedDate'         => date('Y-m-d', strtotime($issuedate)),
                          'VouchersNumber'     => $row[2],
                          'VoucherValueGift'   => $row[3],
                          'RedeemStore'        => $redeemStore,
                          'ExpDate'            => date('Y-m-d', strtotime($expirydate)),
                          'BatchNumber'        => $row[5],
                          'VoucherStatusId'    => 1,
                          'VoucherTypeId'      => 1,
                          'VoucherIssuanceId'  => 0,
                          'AppLoggerId'        => $get['loggerid'],
                        );
                    }else {
                      $memData[] = array(
                        'StoreId'            => $storecode[0]->StoreId,
                        'IssuedDate'         => date('Y-m-d', strtotime($issuedate)),
                        'VouchersNumber'     => $row[2],
                        'VoucherIssuanceId'  => 0,
                        'VoucherValueGift'   => $row[3],
                        'RedeemStore'        => $redeemStore,
                        'BatchNumber'        => $row[5],
                        'VoucherStatusId'    => 10,
                        'VoucherTypeId'      => 1,
                        'AppLoggerId'        => $get['loggerid'],
                        );
                    }
                  }else {
                    $errorImport[] = array(
                      'VoucherNumber' => $row[2],
                      'ErrorMessage' => 'Not allowed to import with Voucher Amount 0.'
                    );
                    $csvfile = false;
                    $actmsg  = " is trying to Import Vouchers with Amount RM 0. Failed.";
                  }
                }
              }
              else
              {
                $errorImport[] = array(
                    'VoucherNumber' => $row[2],
                    'ErrorMessage' => 'Store not active'
                  );
                $csvfile = false;
                $actmsg  = " is trying to Import Gift Voucher. Inactive Store.";
              }
            }
            else
            {
              $errorImport[] = array(
                  'VoucherNumber' => $row[2],
                  'ErrorMessage' => 'Store not exist!'
                );
              $csvfile = false;
              $actmsg  = " is trying to Import Gift Voucher. Store not Exist.";
            }
        }
      }
}
    fclose($handle);
  }
  $this->scheduler_Model->updateImportStatus($import->CSVFileId);

  if (!empty($errorImport)) {
    // Assuming you have a table named "error_log" with columns "log_id", "csv_file_id", "voucher_number" and "error_message"
    foreach ($errorImport as $error) {
        $data = array(
            'csv_file_id' => $import->CSVFileId,
            'voucher_number' => $error['VoucherNumber'],
            'error_message'   => $error['ErrorMessage']
        );
        $this->db->insert('error_log', $data);
    }
  }

  $act = [
      'UserId'           => $data['UserId'],
      'ActivityTypeId'   => 37,
      'ActivityDetails'  => $data['Fullname'].$actmsg,
      'ActiveDate'       => date('Y-m-d H:i:s'),
      'IpAddress'        => $data['IpAddress'],
      'OperatingSystem'  => $data['OperatingSystem'],
      'Browser'          => $data['Browser'],
    ];

    $this->ActivityLog_Model->insert_activity($act);

  $result['csv']          = $csvfile;$result['errorimport']  = $errorImport;
  $result['message']      = 'File has been uploaded';
  $result['token']        = $data['csrf']['hash'];
  echo json_encode($result);
}